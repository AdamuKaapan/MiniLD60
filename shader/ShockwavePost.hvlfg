uniform sampler2D texture1;
uniform int xcoords[10];
uniform int ycoords[10];
uniform float time;
uniform float playerX;
uniform float playerY;
uniform float targetX;
uniform float targetY;
uniform float intensity;
float range = 200.0f;
float playerSpill = 25f;

void main(){
	float offset = 0.0f;
	for(int i = 0; i < 10; i++){
		if(!(xcoords[i] == 0.0f && ycoords[i] == 0.0f)){
			float dist = distance( vec2(float(xcoords[i]),float(ycoords[i])), vec2(gl_TexCoord[0].x*1280.0f,(1.0f - gl_TexCoord[0].y)*720.0f) );
			if(dist < range){
				offset = 
				min(1.0f, 
				(offset +
				((1.0f - (dist/range))*max(sin((-time*16.0f + (dist/5.0f))), 0.0f))
				));
			}
		}
	}
	
	float offset2 = 0.0f;
	float lineDist = distance( vec2(playerX, playerY), vec2(gl_TexCoord[0].x*1280.0f,(1.0f - gl_TexCoord[0].y)*720.0f) );
	float targetDist = distance( vec2(playerX, playerY), vec2(targetX, targetY) );
	float fragDist = 0.0f;
	for(float i = 0.0f; i < targetDist; i += 5.0f){
		fragDist = distance(
				vec2( mix(playerX, targetX, i/targetDist), mix(playerY, targetY, i/targetDist) ),
				vec2( gl_TexCoord[0].x*1280.0f, (1.0 - gl_TexCoord[0].y)*720.0f )
				);
			if(fragDist < playerSpill) offset2 += ((fragDist/playerSpill)/(targetDist/5.0f)) * 
			max(min(sin(-time*16.0f + (lineDist/5f)), 1.0f), 0.0f) * (1.0f - (lineDist/targetDist));
	}
	offset2 *= intensity * 0.5f;
	vec4 color = texture2D(texture1, float2(gl_TexCoord[0].x, gl_TexCoord[0].y + (offset2/8.0f) + (offset/128.0f)));
	gl_FragColor = color;
}